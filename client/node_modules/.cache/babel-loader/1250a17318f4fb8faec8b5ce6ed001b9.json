{"ast":null,"code":"import { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, DELETE, UPDATE, LIKE, COMMENT, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n    case UPDATE:\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          // change the post that just received a comment...\n          if (post._id === action.payload._id) {\n            return action.payload;\n          }\n          ;\n          // return all the other posts normally...\n          return post;\n        })\n      };\n    case CREATE:\n      return [...state.posts, action.payload];\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","CREATE","DELETE","UPDATE","LIKE","COMMENT","START_LOADING","END_LOADING","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","filter","_id","map"],"sources":["/Users/evelynliu/VSCodeProjects/MemoriesProject_MERN/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, DELETE, UPDATE, LIKE, COMMENT, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport default (state = {isLoading: true, posts: []}, action) => {\n    switch (action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true};\n        case END_LOADING:\n            return { ...state, isLoading: false};\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages,\n            };\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload };\n        case FETCH_POST:\n            return { ...state, post: action.payload };\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => (post._id !== action.payload))};\n        case UPDATE:\n        case LIKE:\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n        case COMMENT:\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    // change the post that just received a comment...\n                    if (post._id === action.payload._id) {\n                        return action.payload;\n                    };\n                    // return all the other posts normally...\n                    return post;\n                }),\n            };\n        case CREATE:\n            return [...state.posts, action.payload];\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,eAAe,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,aAAa,EAAEC,WAAW,QAAQ,0BAA0B;AAEpJ,gBAAe,YAAkD;EAAA,IAAjDC,KAAK,uEAAG;IAACC,SAAS,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC;EAAA,IAAEC,MAAM;EACxD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKN,aAAa;MACd,OAAO;QAAE,GAAGE,KAAK;QAAEC,SAAS,EAAE;MAAI,CAAC;IACvC,KAAKF,WAAW;MACZ,OAAO;QAAE,GAAGC,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC;IACxC,KAAKV,SAAS;MACV,OAAO;QACH,GAAGS,KAAK;QACRE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEJ,MAAM,CAACE,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAEL,MAAM,CAACE,OAAO,CAACG;MAClC,CAAC;IACL,KAAKhB,eAAe;MAChB,OAAO;QAAE,GAAGQ,KAAK;QAAEE,KAAK,EAAEC,MAAM,CAACE;MAAQ,CAAC;IAC9C,KAAKf,UAAU;MACX,OAAO;QAAE,GAAGU,KAAK;QAAES,IAAI,EAAEN,MAAM,CAACE;MAAQ,CAAC;IAC7C,KAAKX,MAAM;MACP,OAAO;QAAE,GAAGM,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,MAAM,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAQ;MAAC,CAAC;IAC1F,KAAKV,MAAM;IACX,KAAKC,IAAI;MACL,OAAO;QAAE,GAAGI,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACU,GAAG,CAAEH,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAC,CAAC;IACnH,KAAKZ,OAAO;MACR,OAAO;QACH,GAAGG,KAAK;QACRE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACU,GAAG,CAAEH,IAAI,IAAK;UAC7B;UACA,IAAIA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,EAAE;YACjC,OAAOR,MAAM,CAACE,OAAO;UACzB;UAAC;UACD;UACA,OAAOI,IAAI;QACf,CAAC;MACL,CAAC;IACL,KAAKhB,MAAM;MACP,OAAO,CAAC,GAAGO,KAAK,CAACE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IAC3C;MACI,OAAOL,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module"}