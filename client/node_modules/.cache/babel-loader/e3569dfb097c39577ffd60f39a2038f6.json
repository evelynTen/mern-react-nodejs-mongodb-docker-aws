{"ast":null,"code":"var _jsxFileName = \"/Users/evelynliu/VSCodeProjects/MemoriesProject_MERN/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from './styles';\nimport { createPost, updatePost } from \"../../actions/posts\";\n\n// GET THE CURRENT ID\n\nconst Form = _ref => {\n  var _user$result3;\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      var _user$result;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Please Sign In to create your own memories and like other's memories.\"));\n  }\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({\n        ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","user","JSON","parse","localStorage","getItem","dispatch","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/evelynliu/VSCodeProjects/MemoriesProject_MERN/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from \"react-redux\";\n    \nimport useStyles from './styles';\nimport { createPost, updatePost } from \"../../actions/posts\";\n\n// GET THE CURRENT ID\n    \nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n    const user = JSON.parse(localStorage.getItem('profile'));\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) {\n            dispatch(updatePost(currentId, {...postData, name: user?.result?.name }));\n        } else {\n            dispatch(createPost({...postData, name: user?.result?.name }));\n        }\n\n        clear();\n    };\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n    };\n\n    if(!user?.result?.name) {\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align=\"center\">\n                    Please Sign In to create your own memories and like other's memories.\n                </Typography>\n            </Paper>\n        )\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline minRows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\n            <div className={classes.fileInput}>\n                <FileBase type=\"file\" multiple={false} \n                onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}/>\n            </div>\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}