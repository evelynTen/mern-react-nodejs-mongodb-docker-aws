{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// Action Creators\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","DELETE","UPDATE","LIKE","START_LOADING","END_LOADING","api","getPosts","page","dispatch","type","data","fetchPosts","console","log","payload","error","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["/Users/evelynliu/VSCodeProjects/MemoriesProject_MERN/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// Action Creators\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const { data } = await api.fetchPosts(page);\n\n        console.log(data);\n\n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error.message);\n    }\n    \n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data: { data }} = await api.fetchPostsBySearch(searchQuery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const { data } = await api.createPost(post);\n\n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n\n        dispatch({ type: UPDATE, payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n\n        dispatch({type: DELETE, payload: id});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n\n        dispatch({ type: LIKE, payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}